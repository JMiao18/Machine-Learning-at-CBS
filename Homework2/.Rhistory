knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE,cache = TRUE)
ginitree.pred <- predict(prune.ginitree,subscription.test,type = "class")
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE,cache = TRUE)
mlmkt = read.csv(file = "M:/A Master of Science in Marketing Sciences/MS Machine Learning/Homework2/bank-additional-full.csv",sep=";",header = TRUE)
drops <- c("month","day_of_week","duration","nr.employed")
mlmkt = mlmkt[ , !(names(mlmkt) %in% drops)]
summary(mlmkt)
x <- model.matrix(y~.,mlmkt)[,-1]
y <- mlmkt$y
mlmkt$default[mlmkt$default == "unknown"] = NA
mlmkt$housing[mlmkt$housing == "unknown"] = NA
mlmkt$loan[mlmkt$loan == "unknown"] = NA
mlmkt$job[mlmkt$job == "unknown"] = NA
mlmkt$marital[mlmkt$marital == "unknown"] = NA
mlmkt$loan[mlmkt$loan == "unknown"] = NA
mlmkt$education[mlmkt$education == "unknown"] = NA
mlmkt = na.omit(mlmkt)
mlmkt$job = 1 - (mlmkt$job == "unemployed")
mlmkt$marital = mlmkt$marital == "married"
mlmkt$marital = as.numeric(mlmkt$marital)
edu = as.character(mlmkt$education)
edu[edu == "illiterate"] = 0
edu[edu == "basic.4y"] = 1
edu[edu == "basic.6y"] = 2
edu[edu == "basic.9y"] = 3
edu[edu == "high.school"] = 4
edu[edu == "professional.course"] = 5
edu[edu == "university.degree"] = 6
edu = as.numeric(edu)
mlmkt$education = edu
set.seed(1)
train <- sample( 1: nrow(mlmkt),nrow(mlmkt)/2)
test <- -train
subscription.test = mlmkt[test,]
library(tree)
library(ISLR)
ginitree.subscription <- tree(y ~. -y  , mlmkt , subset=train, split = "gini", control = tree.control(nobs = length(x[train])*16, mincut = 50, minsize = 100))
## plot(ginitree.subscription, main = "Before Pruning")
## text(ginitree.subscription, pretty = 0, cex = .5)
## Cost Complexity Pruning
set.seed(1)
prune.ginitree <- prune.misclass(ginitree.subscription, best = 6)
plot(prune.ginitree, main = "After Pruning")
text(prune.ginitree, pretty = 0, cex = 0.5)
devtree.subscription <- tree(y ~. -y  , mlmkt , subset = train, split = "deviance")
plot(devtree.subscription)
text(devtree.subscription, pretty = 0, cex = .5)
library(randomForest)
library(MASS)
set.seed(1)
rf.subscription <- randomForest(y~.-y, data = mlmkt, subset = train, mtry = 6, importance = TRUE)
importance(rf.subscription)
library(gbm)
set.seed(1)
boost.subscription <- gbm(y ~.-y, data = mlmkt[train,], distribution = "gaussian", n.trees = 5000, interaction.depth = 4)
ginitree.pred <- predict(prune.ginitree,subscription.test,type = "class")
y.test = y[-train]
table(ginitree.pred, y.test)
ginitree.pred
y.test
length(ginitree.pred)
length(y.test)
summary(y.test)
train
summary(y)
summary(subscription.test$y)
length(subscription.test$y)
y.test = subscription.test$y[-train]
table(ginitree.pred, y.test)
summary(y.test)
ginitree.pred <- predict(prune.ginitree,subscription.test,type = "class")
y.test = subscription.test$y
table(ginitree.pred, y.test)
table(devtree.pred, y.test)
devtree.pred <- predict(devtree.subscription,subscription.test,type = "class")
y.test = subscription.test$y
table(devtree.pred, y.test)
yhat.rf = predict(rf.subscription,newdata=mlmkt[-train,],type = "class")
summary(yhat.rf)
y.test = subscription.test$y
table(yhat.boost, y.test)
y.test = subscription.test$y
table(yhat.rf, y.test)
yhat.boost <- predict(boost.subscription, newdata = mlmkt[-train, ], type = "link", n.trees = 50)
y.test = subscription.test$y
table(yhat.boost, y.test)
table(ginitree.pred, y.test)
## Tree Prediction
devtree.pred <- predict(devtree.subscription,subscription.test,type = "class")
y.test = subscription.test$y
table(devtree.pred, y.test)
library(tree)
library(ISLR)
High <- ifelse(Carseats$Sales <= 8, "No", "Yes")
Carseats <- data.frame(Carseats, High)
tree.carseats <- tree(High ~. -Sales, Carseats)
plot(tree.carseats)
text(tree.carseats, pretty = 0, cex = .5)
set.seed(2)
train <- sample(1:nrow(Carseats), 200)
nrow(Carseats)
train <- sample(1:nrow(Carseats), nrow(Carseats)/2)
Carseats.test <- Carseats[-train, ]
High.test <- High[-train]
tree.carseats <- tree(High ~. -Sales, Carseats, subset = train)
tree.pred <- predict(tree.carseats, Carseats.test, type = "class")
table(tree.pred, High.test)
set.seed(2)
train <- sample(1:nrow(Carseats), nrow(Carseats)/2)
Carseats.test <- Carseats[-train, ]
High.test <- High[-train]
tree.carseats <- tree(High ~. -Sales, Carseats, subset = train)
tree.pred <- predict(tree.carseats, Carseats.test, type = "class")
table(tree.pred, High.test)
set.seed(3)
cv.carseats <- cv.tree(tree.carseats, FUN = prune.misclass)
names(cv.carseats)
cv.carseats
par(mfrow = c(1, 2))
plot(cv.carseats$size, cv.carseats$dev,type = "b")
plot(cv.carseats$k, cv.carseats$dev,type = "b")
library(tree)
library(ISLR)
ginitree.subscription <- tree(y ~. -y  , mlmkt , subset=train, split = "gini", control = tree.control(nobs = length(x[train])*16, mincut = 50, minsize = 100))
## plot(ginitree.subscription, main = "Before Pruning")
## text(ginitree.subscription, pretty = 0, cex = .5)
## Cost Complexity Pruning
set.seed(1)
prune.ginitree <- prune.misclass(ginitree.subscription, best = 6)
plot(prune.ginitree, main = "After Pruning")
text(prune.ginitree, pretty = 0, cex = 0.5)
library(tree)
library(ISLR)
ginitree.subscription <- tree(y ~. -y  , mlmkt , subset=train, split = "gini", control = tree.control(nobs = length(x[train])*16, mincut = 50, minsize = 100))
## plot(ginitree.subscription, main = "Before Pruning")
## text(ginitree.subscription, pretty = 0, cex = .5)
## Cost Complexity Pruning
set.seed(1)
prune.ginitree <- prune.misclass(ginitree.subscription, best = 6)
plot(prune.ginitree, main = "After Pruning")
text(prune.ginitree, pretty = 0, cex = 0.5)
library(tree)
library(ISLR)
## , control = tree.control(nobs = length(x[train])*16, mincut = 50, minsize = 100)
ginitree.subscription <- tree(y ~. -y  , mlmkt , subset = train, split = "gini")
set.seed(1)
cv.subscription <- cv.tree(ginitree.subscription, FUN = prune.misclass)
par(mfrow = c(1, 2))
plot(cv.subscription$size, cv.subscription$dev,type = "b")
plot(cv.subscription$k, cv.subscription$dev,type = "b")
# set.seed(1)
# prune.ginitree <- prune.misclass(ginitree.subscription, best = 6)
# plot(prune.ginitree, main = "After Pruning")
# text(prune.ginitree, pretty = 0, cex = 0.5)
cv.subscription
ginitree.subscription
plot(ginitree.subscription)
ginitree.subscription <- tree(y ~. -y  , mlmkt , subset = train, split = "gini")
plot(ginitree.subscription)
devtree.subscription <- tree(y ~. -y  , mlmkt , subset = train, split = "deviance")
plot(devtree.subscription)
text(devtree.subscription, pretty = 0, cex = .5)
devtree.subscription <- tree(y ~. -y  , mlmkt , subset = train, split = "deviance")
plot(devtree.subscription)
text(devtree.subscription, pretty = 0, cex = .5)
devtree.subscription <- tree(y ~. -y  , mlmkt , subset = train, split = "deviance")
plot(devtree.subscription)
text(devtree.subscription, pretty = 0, cex = .5)
set.seed(1)
cv.subscription <- cv.tree(ginitree.subscription, FUN = prune.misclass)
par(mfrow = c(1, 2))
plot(cv.subscription$size, cv.subscription$dev,type = "b")
plot(cv.subscription$k, cv.subscription$dev,type = "b")
library(tree)
library(ISLR)
## , control = tree.control(nobs = length(x[train])*16, mincut = 50, minsize = 100)
ginitree.subscription <- tree(y ~. -y  , mlmkt , subset = train, split = "gini")
plot(ginitree.subscription)
set.seed(1)
cv.subscription <- cv.tree(ginitree.subscription, FUN = prune.misclass)
par(mfrow = c(1, 2))
plot(cv.subscription$size, cv.subscription$dev,type = "b")
plot(cv.subscription$k, cv.subscription$dev,type = "b")
# set.seed(1)
# prune.ginitree <- prune.misclass(ginitree.subscription, best = 6)
# plot(prune.ginitree, main = "After Pruning")
# text(prune.ginitree, pretty = 0, cex = 0.5)
library(tree)
library(ISLR)
## , control = tree.control(nobs = length(x[train])*16, mincut = 50, minsize = 100)
ginitree.subscription <- tree(y ~. -y  , mlmkt[train,], split = "gini")
set.seed(1)
cv.subscription <- cv.tree(ginitree.subscription, FUN = prune.misclass)
par(mfrow = c(1, 2))
plot(cv.subscription$size, cv.subscription$dev,type = "b")
plot(cv.subscription$k, cv.subscription$dev,type = "b")
# set.seed(1)
# prune.ginitree <- prune.misclass(ginitree.subscription, best = 6)
# plot(prune.ginitree, main = "After Pruning")
# text(prune.ginitree, pretty = 0, cex = 0.5)
library(tree)
library(ISLR)
ginitree.subscription <- tree(y ~. -y  , mlmkt[train,], split = "gini", control = tree.control(nobs = length(x[train])*16, mincut = 50, minsize = 100))
set.seed(1)
prune.ginitree <- prune.misclass(ginitree.subscription, best = 6)
plot(prune.ginitree, main = "After Pruning")
text(prune.ginitree, pretty = 0, cex = 0.5)
library(tree)
library(ISLR)
ginitree.subscription <- tree(y ~. -y  , mlmkt[train,], split = "gini", control = tree.control(nobs = length(x[train])*16, mincut = 50, minsize = 100))
set.seed(1)
prune.ginitree <- prune.misclass(ginitree.subscription, best = 50)
plot(prune.ginitree, main = "After Pruning")
text(prune.ginitree, pretty = 0, cex = 0.5)
library(tree)
library(ISLR)
ginitree.subscription <- tree(y ~. -y  , mlmkt[train,], split = "gini")
set.seed(1)
prune.ginitree <- prune.misclass(ginitree.subscription, best = 50)
plot(prune.ginitree, main = "After Pruning")
text(prune.ginitree, pretty = 0, cex = 0.5)
library(tree)
library(ISLR)
ginitree.subscription <- tree(y ~. -y  , mlmkt[train,], split = "gini")
set.seed(1)
prune.ginitree <- prune.misclass(ginitree.subscription, best = 100)
plot(prune.ginitree, main = "After Pruning")
text(prune.ginitree, pretty = 0, cex = 0.5)
library(tree)
library(ISLR)
ginitree.subscription <- tree(y ~. -y  , mlmkt[train,], split = "gini")
set.seed(1)
prune.ginitree <- prune.misclass(ginitree.subscription, best = 10)
plot(prune.ginitree, main = "After Pruning")
text(prune.ginitree, pretty = 0, cex = 0.5)
library(tree)
library(ISLR)
ginitree.subscription <- tree(y ~. -y  , mlmkt[train,], split = "gini")
set.seed(1)
prune.ginitree <- prune.misclass(ginitree.subscription, best = 6)
plot(prune.ginitree, main = "After Pruning")
text(prune.ginitree, pretty = 0, cex = 0.5)
library(tree)
library(ISLR)
ginitree.subscription <- tree(y ~. -y  , mlmkt[train,], split = "gini")
set.seed(1)
prune.ginitree <- prune.misclass(ginitree.subscription, best = 7)
plot(prune.ginitree, main = "After Pruning")
text(prune.ginitree, pretty = 0, cex = 0.5)
devtree.subscription <- tree(y ~. -y  , mlmkt , subset = train, split = "deviance")
plot(devtree.subscription)
text(devtree.subscription, pretty = 0, cex = .5)
set.seed(1)
cv.subscription <- cv.tree(devtree.subscription, FUN = prune.misclass)
par(mfrow = c(1, 2))
plot(cv.subscription$size, cv.subscription$dev,type = "b")
plot(cv.subscription$k, cv.subscription$dev,type = "b")
length(mlmkt[train,])
length(mlmkt)
length(subscription.test)
yhat.boost
summary(yhat.boost)
plot(yhat.boost)
